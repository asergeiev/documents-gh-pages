"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[172],{3905:function(e,t,o){o.d(t,{Zo:function(){return s},kt:function(){return f}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(o),f=r,p=m["".concat(u,".").concat(f)]||m[f]||d[f]||i;return o?n.createElement(p,a(a({ref:t},s),{},{components:o})):n.createElement(p,a({ref:t},s))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=o[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},7387:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return m}});var n=o(7462),r=o(3366),i=(o(7294),o(3905)),a=["components"],l={id:"custom-builds",title:"Custom Builds",sidebar_label:"Custom Builds"},u="Custom Builds",c={unversionedId:"custom-builds",id:"custom-builds",isDocsHomePage:!1,title:"Custom Builds",description:"There is always a trade-off between the face recognition accuracy, the",source:"@site/docs/Custom-builds.md",sourceDirName:".",slug:"/custom-builds",permalink:"/documents/docs/custom-builds",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Custom-builds.md",tags:[],version:"current",frontMatter:{id:"custom-builds",title:"Custom Builds",sidebar_label:"Custom Builds"},sidebar:"someSidebar",previous:{title:"Architecture and Scalability",permalink:"/documents/docs/architecture-and-scalability"},next:{title:"Face Data Migration",permalink:"/documents/docs/face-data-migration"}},s=[{value:"List of custom-builds",id:"list-of-custom-builds",children:[],level:2},{value:"Contribution",id:"contribution",children:[],level:2},{value:"How to choose a build",id:"how-to-choose-a-build",children:[],level:2},{value:"How to run custom-builds",id:"how-to-run-custom-builds",children:[],level:2},{value:"How to build your own custom-build",id:"how-to-build-your-own-custom-build",children:[{value:"Custom models",id:"custom-models",children:[],level:3}],level:2}],d={toc:s};function m(e){var t=e.components,o=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"custom-builds"},"Custom Builds"),(0,i.kt)("p",null,"There is always a trade-off between the face recognition accuracy, the\nsystem's max throughput, and even hardware support."),(0,i.kt)("p",null,"By default, the CompreFace release contains configuration that could be\nrun on the widest variety of hardware."),(0,i.kt)("p",null,"The downside of this build is that it's not optimized for the latest\ngenerations of CPU and doesn't support GPU."),(0,i.kt)("p",null,"With custom-builds, we aim to cover as many cases as we can. They are\nnot tested as well as the default build, and we encourage the community\nto report any bugs related to these builds."),(0,i.kt)("h2",{id:"list-of-custom-builds"},"List of custom-builds"),(0,i.kt)("p",null,"You can find the list of custom builds"),(0,i.kt)("h2",{id:"contribution"},"Contribution"),(0,i.kt)("p",null,"We also encourage the community to share their builds; we will add them\nto our list with notice that this is a community build."),(0,i.kt)("h2",{id:"how-to-choose-a-build"},"How to choose a build"),(0,i.kt)("p",null,"Different builds are fit for different purposes - some of them have\nhigher accuracy, but the performance on CPU is low; others are optimized\nfor low-performance hardware and have acceptable accuracy. Of course,\nyou have to make your own choice in this trade-off. But generally, you\ncan follow these rules:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you want to run real-time face recognition, we recommend choosing\nbuilds with GPU support."),(0,i.kt)("li",{parentName:"ul"},"If you need to run face recognition on old or low-performance\nsystems, we recommend using builds with models initially created for\nmobile"),(0,i.kt)("li",{parentName:"ul"},"Do not take the most accurate model blindly. The accuracy does not\nvary significantly between models, but the required hardware\nresources could differ dramatically")),(0,i.kt)("h2",{id:"how-to-run-custom-builds"},"How to run custom-builds"),(0,i.kt)("p",null,"Running custom-build is very similar to running the default build - all\nyou need to do is open the corresponding folder and run\n",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose up -d"),"."),(0,i.kt)("p",null,"Things to consider:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you run CompreFace from the custom-build\nfolder, it creates a new docker volume so that you won't see your saved\ninformation. To run custom-build with your previously saved information,\nyou need to copy files from custom-build to folder with the original\nbuild (and replace the original files) "),(0,i.kt)("li",{parentName:"ul"},"In most cases, face recognition\nmodels are not interchangeable; this means that all you saved examples\nfrom the old build won't work on new builds. See ",(0,i.kt)("a",{parentName:"li",href:"/documents/docs/face-data-migration"},"migrations\ndocumentation")," to know what is the options. "),(0,i.kt)("li",{parentName:"ul"},"Do not run two instances of CompreFace simultaneously without changing the\nport. To change the port, go to the ",(0,i.kt)("inlineCode",{parentName:"li"},"docker-compose")," file and change the\npost for the ",(0,i.kt)("inlineCode",{parentName:"li"},"compreface-fe")," container.")),(0,i.kt)("h2",{id:"how-to-build-your-own-custom-build"},"How to build your own custom-build"),(0,i.kt)("h3",{id:"custom-models"},"Custom models"),(0,i.kt)("p",null,"CompreFace supports two face recognition libraries - FaceNet and\nInsightFace. It means CompreFace can run any model that can run these\nlibraries. So all you need to do is 1. Upload your model to Google Drive\nand add it to one of the following files into the ",(0,i.kt)("inlineCode",{parentName:"p"},"Calculator")," class: -\n/embedding-calculator/src/services/facescan/plugins/facenet/facenet.py -\n/embedding-calculator/src/services/facescan/plugins/insightface/insightface.py\n2. Take the ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," file from ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev")," folder as a template 3.\nSpecify new model names in build arguments. For more information, look\nat ",(0,i.kt)("a",{parentName:"p",href:"#run-service"},"this documentation"),". E.g. here is a part of the\n",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose")," file for building with a custom model with GPU support:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'compreface-core:\n  image: ${registry}compreface-core:${CORE_VERSION}\n  container_name: "compreface-core"\n  ports:\n    - "3300:3000"\n  runtime: nvidia\n  build:\n    context: ../embedding-calculator\n    args:\n      - FACE_DETECTION_PLUGIN=insightface.FaceDetector@retinaface_r50_v1\n      - CALCULATION_PLUGIN=insightface.Calculator@arcface_r100_v1\n      - EXTRA_PLUGINS=insightface.LandmarksDetector,insightface.GenderDetector,insightface.AgeDetector,insightface.facemask.MaskDetector\n      - BASE_IMAGE=compreface-core-base:base-cuda100-py37\n      - GPU_IDX=0\n  environment:\n    - ML_PORT=3000\n')))}m.isMDXComponent=!0}}]);