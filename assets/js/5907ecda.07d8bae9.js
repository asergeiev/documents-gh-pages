"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3867],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return g}});var n=a(7294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var m=n.createContext({}),d=function(t){var e=n.useContext(m),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=d(t.components);return n.createElement(m.Provider,{value:e},t.children)},o={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,m=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),s=d(a),g=l,c=s["".concat(m,".").concat(g)]||s[g]||o[g]||r;return a?n.createElement(c,i(i({ref:e},u),{},{components:a})):n.createElement(c,i({ref:e},u))}));function g(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=s;var p={};for(var m in e)hasOwnProperty.call(e,m)&&(p[m]=e[m]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var d=2;d<r;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},9852:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return p},contentTitle:function(){return m},metadata:function(){return d},toc:function(){return u},default:function(){return s}});var n=a(7462),l=a(3366),r=(a(7294),a(3905)),i=["components"],p={id:"rest-api-description",title:"Rest API Description",sidebar_label:"Rest API Description"},m="Rest API description",d={unversionedId:"rest-api-description",id:"rest-api-description",isDocsHomePage:!1,title:"Rest API Description",description:"To know more about face services and face plugins visit this page.",source:"@site/docs/Rest-API-description.md",sourceDirName:".",slug:"/rest-api-description",permalink:"/documents/docs/rest-api-description",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Rest-API-description.md",tags:[],version:"current",frontMatter:{id:"rest-api-description",title:"Rest API Description",sidebar_label:"Rest API Description"},sidebar:"someSidebar",previous:{title:"Face Services and Plugins",permalink:"/documents/docs/face-services-and-plugins"},next:{title:"Face Recognition Similarity Threshold",permalink:"/documents/docs/face-recognition-similarity-threshold"}},u=[{value:"Face Recognition Service",id:"face-recognition-service",children:[{value:"Managing Subjects",id:"managing-subjects",children:[],level:3},{value:"Add a Subject",id:"add-a-subject",children:[],level:3},{value:"Rename a Subject",id:"rename-a-subject",children:[],level:3},{value:"Delete a Subject",id:"delete-a-subject",children:[],level:3},{value:"Delete All Subjects",id:"delete-all-subjects",children:[],level:3},{value:"List Subjects",id:"list-subjects",children:[],level:3},{value:"Managing Subject Examples",id:"managing-subject-examples",children:[],level:3},{value:"Add an Example of a Subject",id:"add-an-example-of-a-subject",children:[],level:3},{value:"List of All Saved Examples of the Subject",id:"list-of-all-saved-examples-of-the-subject",children:[],level:3},{value:"Delete All Examples of the Subject by Name",id:"delete-all-examples-of-the-subject-by-name",children:[],level:3},{value:"Delete an Example of the Subject by ID",id:"delete-an-example-of-the-subject-by-id",children:[],level:3},{value:"Direct Download an Image example of the Subject by ID",id:"direct-download-an-image-example-of-the-subject-by-id",children:[],level:3},{value:"Download an Image example of the Subject by ID",id:"download-an-image-example-of-the-subject-by-id",children:[],level:3},{value:"Recognize Faces from a Given Image",id:"recognize-faces-from-a-given-image",children:[],level:3},{value:"Verify Faces from a Given Image",id:"verify-faces-from-a-given-image",children:[],level:3}],level:2},{value:"Face Detection Service",id:"face-detection-service",children:[],level:2},{value:"Face Verification Service",id:"face-verification-service",children:[],level:2},{value:"Base64 Support",id:"base64-support",children:[{value:"Add an Example of a Subject, Base64",id:"add-an-example-of-a-subject-base64",children:[],level:3},{value:"Recognize Faces from a Given Image, Base64",id:"recognize-faces-from-a-given-image-base64",children:[],level:3},{value:"Verify Faces from a Given Image, Base64",id:"verify-faces-from-a-given-image-base64",children:[],level:3},{value:"Face Detection Service, Base64",id:"face-detection-service-base64",children:[],level:3},{value:"Face Verification Service, Base64",id:"face-verification-service-base64",children:[],level:3}],level:2}],o={toc:u};function s(t){var e=t.components,a=(0,l.Z)(t,i);return(0,r.kt)("wrapper",(0,n.Z)({},o,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rest-api-description"},"Rest API description"),(0,r.kt)("p",null,"To know more about face services and face plugins visit ",(0,r.kt)("a",{parentName:"p",href:"/documents/docs/face-services-and-plugins"},"this page"),"."),(0,r.kt)("h2",{id:"face-recognition-service"},"Face Recognition Service"),(0,r.kt)("h3",{id:"managing-subjects"},"Managing Subjects"),(0,r.kt)("p",null,"These endpoints allow you to work with subjects."),(0,r.kt)("p",null,"The most popular case of subject usage is to assign a subject to one\nperson. So, to upload several images of one person, you need to upload\nthem to one subject. As a result, when you perform face recognition, you\nfind a person on the image."),(0,r.kt)("p",null,"Another case of subject usage is assigning a photo of several people as\na subject. In this case, you need to detect all faces on the image and\nthen save them to one subject. As a result, when you perform face\nrecognition, you find all photos on which there is the person from the\nimage. But, again, you don't need to work with subjects explicitly. You\ncan upload a new example of the subject, and the subject is then created\nautomatically. Or, if you delete all the examples of the subject, it is\ndeleted automatically."),(0,r.kt)("h3",{id:"add-a-subject"},"Add a Subject"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"Create a new subject in Face Collection. Creating a subject is an optional step,\nyou can ",(0,r.kt)("a",{parentName:"p",href:"#add-an-example-of-a-subject"},"upload an example")," without an existing subject, and a subject will be created automatically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X POST "http://localhost:8000/api/v1/recognition/subjects" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d \'{"subject: <subject_name>"}\'\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"body param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name of the subject. It can be a person name, but it can be any string")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "subject": "<subject_name>"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name of the subject")))),(0,r.kt)("h3",{id:"rename-a-subject"},"Rename a Subject"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"Rename existing subject. If a new subject name already exists,\nsubjects are merged - all faces from the old subject name are ",(0,r.kt)("strong",{parentName:"p"},"reassigned")," to the subject with the new name, old subject removed.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X PUT "http://localhost:8000/api/v1/recognition/subjects/<subject>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d \'{"subject: <subject_name>"}\'\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"body param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name of the subject. It can be a person name, but it can be any string")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "updated": "true|false"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"updated"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"failed or success")))),(0,r.kt)("h3",{id:"delete-a-subject"},"Delete a Subject"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"Delete existing subject and all saved faces."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X DELETE "http://localhost:8000/api/v1/recognition/subjects/<subject>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"body param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name of the subject. It can be a person name, but it can be any string")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "subject": "<subject_name>"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name of the subject")))),(0,r.kt)("h3",{id:"delete-all-subjects"},"Delete All Subjects"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"Delete all existing subjects and all saved faces."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X DELETE "http://localhost:8000/api/v1/recognition/subjects" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "deleted": "<count>"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deleted"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"number of deleted subjects")))),(0,r.kt)("h3",{id:"list-subjects"},"List Subjects"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"This returns all subject related to Face Collection.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X GET "http://localhost:8000/api/v1/recognition/subjects/" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"application/json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "subjects": [\n    "<subject_name1>",\n    "<subject_name2>"\n    ]\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subjects"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"the list of subjects in Face Collection")))),(0,r.kt)("h3",{id:"managing-subject-examples"},"Managing Subject Examples"),(0,r.kt)("p",null,"The subject example is an image of a known face that you want to save to\nface collection."),(0,r.kt)("p",null,"When you save a subject example, CompreFace calculates the embedding of\nthe face (faceprint) and saves it into the database. Although the image\nitself is saved by default, it is needed for managing images,\ne.g.,\xa0",(0,r.kt)("a",{parentName:"p",href:"#direct-download-an-image-example-of-the-subject-by-id"},"download of the\nimage"),". You can\nchange it using the ",(0,r.kt)("inlineCode",{parentName:"p"},"save_images_to_db")," parameter in\n","[configuration]","."),(0,r.kt)("p",null,"One subject example is enough for face recognition; the accuracy is high\nenough. But if you add more examples, the accuracy can be even better."),(0,r.kt)("h3",{id:"add-an-example-of-a-subject"},"Add an Example of a Subject"),(0,r.kt)("p",null,"This creates an example of the subject by saving images. You can add as many images as you want to train the system. Image should\ncontain only one face."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X POST "http://localhost:8000/api/v1/recognition/faces?subject=<subject>&det_prob_threshold=<det_prob_threshold>" \\\n-H "Content-Type: multipart/form-data" \\\n-H "x-api-key: <service_api_key>" \\\n-F file=@<local_file> \n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"multipart/form-data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name you assign to the image you save")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"det_prob_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"minimum required confidence that a recognized face is actually a face. Value is between 0.0 and 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")))),(0,r.kt)("p",null,"Response body on success:  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "image_id": "6b135f5b-a365-4522-b1f1-4c9ac2dd0728",\n  "subject": "subject1"\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of uploaded image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Subject of the saved image")))),(0,r.kt)("h3",{id:"list-of-all-saved-examples-of-the-subject"},"List of All Saved Examples of the Subject"),(0,r.kt)("p",null,"To retrieve a list of subjects saved in a Face Collection:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X GET "http://localhost:8000/api/v1/recognition/faces?page=<page>&size=<size>" \\\n-H "x-api-key: <service_api_key>" \\\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"page"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"page number of examples to return. Can be used for pagination. Default value is 0. Since 0.6 version")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"size"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"faces on page (page size). Can be used for pagination. Default value is 20. Since 0.6 version")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "faces": [\n    {\n      "image_id": <image_id>,\n      "subject": <subject>\n    },\n    ...\n  ],\n  "page_number": 0,\n  "page_size": 10,\n  "total_pages": 2,\n  "total_elements": 12\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face.image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fase.subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<subject>")," of the person, whose picture was saved for this api key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"page_number"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"page number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"page_size"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"requested")," page size")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"total_pages"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"total pages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"total_elements"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"total faces")))),(0,r.kt)("h3",{id:"delete-all-examples-of-the-subject-by-name"},"Delete All Examples of the Subject by Name"),(0,r.kt)("p",null,"To delete all image examples of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<subject>"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X DELETE "http://localhost:8000/api/v1/recognition/faces?subject=<subject>" \\\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"is the name subject. If this parameter is absent, all faces in Face Collection will be removed")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n    "deleted": <count>\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"deleted"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of deleted faces")))),(0,r.kt)("h3",{id:"delete-an-example-of-the-subject-by-id"},"Delete an Example of the Subject by ID"),(0,r.kt)("p",null,"Endpoint to delete an image by ID. If no image found by id - 404."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X DELETE "http://localhost:8000/api/v1/recognition/faces/<image_id>" \\\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the removing face")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "image_id": <image_id>,\n  "subject": <subject>\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the removed face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<subject>")," of the person, whose picture was saved for this api key")))),(0,r.kt)("h3",{id:"direct-download-an-image-example-of-the-subject-by-id"},"Direct Download an Image example of the Subject by ID"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"You can paste this URL into the ",(0,r.kt)("inlineCode",{parentName:"p"},"<img>")," html tag to show the image."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X GET "http://localhost:8000/api/v1/static/<service_api_key>/images/<image_id>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"service_api_key"),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the image to download")))),(0,r.kt)("p",null,"Response body is binary image. Empty bytes if image not found."),(0,r.kt)("h3",{id:"download-an-image-example-of-the-subject-by-id"},"Download an Image example of the Subject by ID"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.6 version")),(0,r.kt)("p",null,"To download an image example of the Subject by ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X GET "http://localhost:8000/api/v1/recognition/faces/<image_id>/img"\n-H "x-api-key: <service_api_key>"\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the image to download")))),(0,r.kt)("p",null,"Response body is binary image. Empty bytes if image not found."),(0,r.kt)("h3",{id:"recognize-faces-from-a-given-image"},"Recognize Faces from a Given Image"),(0,r.kt)("p",null,"To recognize faces from the uploaded image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl  -X POST "http://localhost:8000/api/v1/recognition/recognize?limit=<limit>&prediction_count=<prediction_count>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: multipart/form-data" \\\n-H "x-api-key: <service_api_key>" \\\n-F file=<local_file>\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"multipart/form-data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"maximum number of faces on the image to be recognized. It recognizes the biggest faces first. Value of 0 represents no limit. Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"det_prob_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"minimum required confidence that a recognized face is actually a face. Value is between 0.0 and 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prediction_count"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"maximum number of subject predictions per face. It returns the most similar subjects. Default value: 1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face_plugins"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated slugs of face plugins. If empty, no additional information is returned. ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md"},"Learn more"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"if true includes system information like execution_time and plugin_version fields. Default value is false")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "result" : [ {\n    "age" : {\n      "probability": 0.9308982491493225,\n      "high": 32,\n      "low": 25\n    },\n    "gender" : {\n      "probability": 0.9898611307144165,\n      "value": "female"\n    },\n    "mask" : {\n      "probability": 0.9999470710754395,\n      "value": "without_mask"\n    },\n    "embedding" : [ 9.424854069948196E-4, "...", -0.011415496468544006 ],\n    "box" : {\n      "probability" : 1.0,\n      "x_max" : 1420,\n      "y_max" : 1368,\n      "x_min" : 548,\n      "y_min" : 295\n    },\n    "landmarks" : [ [ 814, 713 ], [ 1104, 829 ], [ 832, 937 ], [ 704, 1030 ], [ 1017, 1133 ] ],\n    "subjects" : [ {\n      "similarity" : 0.97858,\n      "subject" : "subject1"\n    } ],\n    "execution_time" : {\n      "age" : 28.0,\n      "gender" : 26.0,\n      "detector" : 117.0,\n      "calculator" : 45.0,\n      "mask": 36.0\n    }\n  } ],\n  "plugins_versions" : {\n    "age" : "agegender.AgeDetector",\n    "gender" : "agegender.GenderDetector",\n    "detector" : "facenet.FaceDetector",\n    "calculator" : "facenet.Calculator",\n    "mask": "facemask.MaskDetector"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"age"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected age range. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"age plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gender"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected gender. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"gender plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mask"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected mask. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"face mask plugin")," is enabled.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embedding"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"face embeddings. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"calculator plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"box"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"list of parameters of the bounding box for this face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"probability"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"probability that a found face is actually a face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x_max, y_max, x_min, y_min"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"coordinates of the frame containing the face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"landmarks"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"list of the coordinates of the frame containing the face-landmarks. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"landmarks plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subjects"),(0,r.kt)("td",{parentName:"tr",align:null},"list"),(0,r.kt)("td",{parentName:"tr",align:null},"list of similar subjects with size of <prediction_count> order by similarity")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"similarity"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"similarity that on that image predicted person")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"subject"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"name of the subject in Face Collection")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"execution_time"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"execution time of all plugins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"plugins_versions"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"contains information about plugin versions")))),(0,r.kt)("h3",{id:"verify-faces-from-a-given-image"},"Verify Faces from a Given Image"),(0,r.kt)("p",null,"To compare faces from the uploaded images with the face in saved image ID:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X POST "http://localhost:8000/api/v1/recognition/faces/<image_id>/verify?\nlimit=<limit>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: multipart/form-data" \\\n-H "x-api-key: <service_api_key>" \\\n-F file=<local_file>\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"multipart/form-data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face recognition service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"image_id"),(0,r.kt)("td",{parentName:"tr",align:null},"variable"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"UUID of the verifying face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"maximum number of faces on the target image to be recognized. It recognizes the biggest faces first. Value of 0 represents no limit. Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"det_prob_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"minimum required confidence that a recognized face is actually a face. Value is between 0.0 and 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face_plugins"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated slugs of face plugins. If empty, no additional information is returned. ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md"},"Learn more"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"if true includes system information like execution_time and plugin_version fields. Default value is false")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "result": [\n    {\n      "age" : {\n        "probability": 0.9308982491493225,\n        "high": 32,\n        "low": 25\n      },\n      "gender" : {\n        "probability": 0.9898611307144165,\n        "value": "female"\n      },\n      "mask" : {\n        "probability": 0.9999470710754395,\n        "value": "without_mask"\n      },\n      "embedding" : [ -0.049007344990968704, "...", -0.01753818802535534 ],\n      "box" : {\n        "probability" : 0.9997453093528748,\n        "x_max" : 205,\n        "y_max" : 167,\n        "x_min" : 48,\n        "y_min" : 0\n      },\n      "landmarks" : [ [ 260, 129 ], [ 273, 127 ], [ 258, 136 ], [ 257, 150 ], [ 269, 148 ] ],\n      "similarity" : 0.97858,\n      "execution_time" : {\n        "age" : 59.0,\n        "gender" : 30.0,\n        "detector" : 177.0,\n        "calculator" : 70.0,\n        "mask": 36.0\n      }\n    }\n  ],\n  "plugins_versions" : {\n    "age" : "agegender.AgeDetector",\n    "gender" : "agegender.GenderDetector",\n    "detector" : "facenet.FaceDetector",\n    "calculator" : "facenet.Calculator",\n    "mask": "facemask.MaskDetector"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"age"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected age range. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"age plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gender"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected gender. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"gender plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mask"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected mask. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"face mask plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embedding"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"face embeddings. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"calculator plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"box"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"list of parameters of the bounding box for this face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"probability"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"probability that a found face is actually a face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x_max, y_max, x_min, y_min"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"coordinates of the frame containing the face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"landmarks"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"list of the coordinates of the frame containing the face-landmarks. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"landmarks plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"similarity"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"similarity that on that image predicted person")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"execution_time"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"execution time of all plugins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"plugins_versions"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"contains information about plugin versions")))),(0,r.kt)("h2",{id:"face-detection-service"},"Face Detection Service"),(0,r.kt)("p",null,"To detect faces from the uploaded image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl  -X POST "http://localhost:8000/api/v1/detection/detect?limit=<limit>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: multipart/form-data" \\\n-H "x-api-key: <service_api_key>" \\\n-F file=<local_file>\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"multipart/form-data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face Detection service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"file"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"image where to detect faces. Allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"maximum number of faces on the image to be recognized. It recognizes the biggest faces first. Value of 0 represents no limit. Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"det_prob_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"minimum required confidence that a recognized face is actually a face. Value is between 0.0 and 1.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face_plugins"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated slugs of face plugins. If empty, no additional information is returned. ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md"},"Learn more"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"if true includes system information like execution_time and plugin_version fields. Default value is false")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "result" : [ {\n    "age" : {\n      "probability": 0.9308982491493225,\n      "high": 32,\n      "low": 25\n    },\n    "gender" : {\n      "probability": 0.9898611307144165,\n      "value": "female"\n    },\n    "mask" : {\n      "probability": 0.9999470710754395,\n      "value": "without_mask"\n    },\n    "embedding" : [ -0.03027934394776821, "...", -0.05117142200469971 ],\n    "box" : {\n      "probability" : 0.9987509250640869,\n      "x_max" : 376,\n      "y_max" : 479,\n      "x_min" : 68,\n      "y_min" : 77\n    },\n    "landmarks" : [ [ 156, 245 ], [ 277, 253 ], [ 202, 311 ], [ 148, 358 ], [ 274, 365 ] ],\n    "execution_time" : {\n      "age" : 30.0,\n      "gender" : 26.0,\n      "detector" : 130.0,\n      "calculator" : 49.0,\n      "mask": 36.0\n    }\n  } ],\n  "plugins_versions" : {\n    "age" : "agegender.AgeDetector",\n    "gender" : "agegender.GenderDetector",\n    "detector" : "facenet.FaceDetector",\n    "calculator" : "facenet.Calculator",\n    "mask": "facemask.MaskDetector"\n  }\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"age"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected age range. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"age plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gender"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected gender. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"gender plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mask"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected mask. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"face mask plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embedding"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"face embeddings. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"calculator plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"box"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"list of parameters of the bounding box for this face (on processedImage)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"probability"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"probability that a found face is actually a face (on processedImage)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x_max, y_max, x_min, y_min"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"coordinates of the frame containing the face (on processedImage)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"landmarks"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"list of the coordinates of the frame containing the face-landmarks. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"landmarks plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"execution_time"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"execution time of all plugins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"plugins_versions"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"contains information about plugin versions")))),(0,r.kt)("h2",{id:"face-verification-service"},"Face Verification Service"),(0,r.kt)("p",null,"To compare faces from given two images:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl  -X POST "http://localhost:8000/api/v1/verification/verify?limit=<limit>&prediction_count=<prediction_count>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: multipart/form-data" \\\n-H "x-api-key: <service_api_key>" \\\n-F source_image=<local_check_file>\n-F target_image=<local_process_file>\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"multipart/form-data")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x-api-key"),(0,r.kt)("td",{parentName:"tr",align:null},"header"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"api key of the Face verification service, created by the user")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source_image"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"file to be verified. Allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"target_image"),(0,r.kt)("td",{parentName:"tr",align:null},"body"),(0,r.kt)("td",{parentName:"tr",align:null},"image"),(0,r.kt)("td",{parentName:"tr",align:null},"required"),(0,r.kt)("td",{parentName:"tr",align:null},"reference file to check the source file. Allowed image formats: jpeg, jpg, ico, png, bmp, gif, tif, tiff, webp. Max size is 5Mb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"limit"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"maximum number of faces on the target image to be recognized. It recognizes the biggest faces first. Value of 0 represents no limit. Default value: 0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"det_prob_threshold"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"minimum required confidence that a recognized face is actually a face. Value is between 0.0 and 1.0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face_plugins"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"comma-separated slugs of face plugins. If empty, no additional information is returned. ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md"},"Learn more"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"param"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},"if true includes system information like execution_time and plugin_version fields. Default value is false")))),(0,r.kt)("p",null,"Response body on success:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "result" : [{\n    "source_image_face" : {\n      "age" : {\n        "probability": 0.9308982491493225,\n        "high": 32,\n        "low": 25\n      },\n      "gender" : {\n        "probability": 0.9898611307144165,\n        "value": "female"\n      },\n      "mask" : {\n        "probability": 0.9999470710754395,\n        "value": "without_mask"\n      },\n      "embedding" : [ -0.0010271212086081505, "...", -0.008746841922402382 ],\n      "box" : {\n        "probability" : 0.9997453093528748,\n        "x_max" : 205,\n        "y_max" : 167,\n        "x_min" : 48,\n        "y_min" : 0\n      },\n      "landmarks" : [ [ 92, 44 ], [ 130, 68 ], [ 71, 76 ], [ 60, 104 ], [ 95, 125 ] ],\n      "execution_time" : {\n        "age" : 85.0,\n        "gender" : 51.0,\n        "detector" : 67.0,\n        "calculator" : 116.0,\n        "mask": 36.0\n      }\n    },\n    "face_matches": [\n      {\n        "age" : {\n          "probability": 0.9308982491493225,\n          "high": 32,\n          "low": 25\n        },\n        "gender" : {\n          "probability": 0.9898611307144165,\n          "value": "female"\n        },\n        "mask" : {\n          "probability": 0.9999470710754395,\n          "value": "without_mask"\n        },\n        "embedding" : [ -0.049007344990968704, "...", -0.01753818802535534 ],\n        "box" : {\n          "probability" : 0.99975,\n          "x_max" : 308,\n          "y_max" : 180,\n          "x_min" : 235,\n          "y_min" : 98\n        },\n        "landmarks" : [ [ 260, 129 ], [ 273, 127 ], [ 258, 136 ], [ 257, 150 ], [ 269, 148 ] ],\n        "similarity" : 0.97858,\n        "execution_time" : {\n          "age" : 59.0,\n          "gender" : 30.0,\n          "detector" : 177.0,\n          "calculator" : 70.0,\n          "mask": 36.0\n        }\n      }],\n    "plugins_versions" : {\n      "age" : "agegender.AgeDetector",\n      "gender" : "agegender.GenderDetector",\n      "detector" : "facenet.FaceDetector",\n      "calculator" : "facenet.Calculator",\n      "mask": "facemask.MaskDetector"\n    }\n  }]\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source_image_face"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"additional info about source image face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"face_matches"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"result of face verification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"age"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected age range. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"age plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"gender"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected gender. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"gender plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mask"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"detected mask. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"face mask plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"embedding"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"face embeddings. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"calculator plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"box"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"list of parameters of the bounding box for this face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"probability"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"probability that a found face is actually a face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x_max, y_max, x_min, y_min"),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"coordinates of the frame containing the face")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"landmarks"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"list of the coordinates of the frame containing the face-landmarks. Return only if ",(0,r.kt)("a",{parentName:"td",href:"Face-services-and-plugins.md#face-plugins"},"landmarks plugin")," is enabled")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"similarity"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"similarity between this face and the face on the source image")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"execution_time"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"execution time of all plugins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"plugins_versions"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"contains information about plugin versions")))),(0,r.kt)("h2",{id:"base64-support"},"Base64 Support"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"since 0.5.1 version")),(0,r.kt)("p",null,"Except ",(0,r.kt)("inlineCode",{parentName:"p"},"multipart/form-data"),", all CompreFace endpoints, that require images as input, accept images in ",(0,r.kt)("inlineCode",{parentName:"p"},"Base64")," format.\nThe base rule is to use ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type: application/json")," header and send JSON in the body.\nThe name of the JSON parameter coincides with the name of the ",(0,r.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," parameter."),(0,r.kt)("h3",{id:"add-an-example-of-a-subject-base64"},"Add an Example of a Subject, Base64"),(0,r.kt)("p",null,"Full description ",(0,r.kt)("a",{parentName:"p",href:"#add-an-example-of-a-subject"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X POST "http://localhost:8000/api/v1/recognition/faces?subject=<subject>&det_prob_threshold=<det_prob_threshold>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d {"file": "<base64_value>"}\n')),(0,r.kt)("h3",{id:"recognize-faces-from-a-given-image-base64"},"Recognize Faces from a Given Image, Base64"),(0,r.kt)("p",null,"Full description ",(0,r.kt)("a",{parentName:"p",href:"#recognize-faces-from-a-given-image"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl  -X POST "http://localhost:8000/api/v1/recognition/recognize?limit=<limit>&prediction_count=<prediction_count>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d {"file": "<base64_value>"}\n')),(0,r.kt)("h3",{id:"verify-faces-from-a-given-image-base64"},"Verify Faces from a Given Image, Base64"),(0,r.kt)("p",null,"Full description ",(0,r.kt)("a",{parentName:"p",href:"#verify-faces-from-a-given-image"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X POST "http://localhost:8000/api/v1/recognition/faces/<image_id>/verify?\nlimit=<limit>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d {"file": "<base64_value>"}\n')),(0,r.kt)("h3",{id:"face-detection-service-base64"},"Face Detection Service, Base64"),(0,r.kt)("p",null,"Full description ",(0,r.kt)("a",{parentName:"p",href:"#face-detection-service"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl  -X POST "http://localhost:8000/api/v1/detection/detect?limit=<limit>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d {"file": "<base64_value>"}\n')),(0,r.kt)("h3",{id:"face-verification-service-base64"},"Face Verification Service, Base64"),(0,r.kt)("p",null,"Full description ",(0,r.kt)("a",{parentName:"p",href:"#face-verification-service"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},'curl -X POST "http://localhost:8000/api/v1/verification/verify?limit=<limit>&prediction_count=<prediction_count>&det_prob_threshold=<det_prob_threshold>&face_plugins=<face_plugins>&status=<status>" \\\n-H "Content-Type: application/json" \\\n-H "x-api-key: <service_api_key>" \\\n-d {"source_image": "<source_image_base64_value>", "target_image": "<target_image_base64_value>"}\n')))}s.isMDXComponent=!0}}]);